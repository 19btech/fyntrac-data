version: '3.8'  # Explicit version for compatibility (supports healthchecks, networks, etc.)

services:
  mongodb:
    image: mongo:6.0.8  # Pinned version instead of latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: "R3s3rv#313"
      MONGO_INITDB_DATABASE: master
    volumes:
      - mongodb-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro  # Assumes init script exists in current dir
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "-u", "root", "-p", "R3s3rv#313", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s  # Give MongoDB time to initialize (optional but recommended)
    networks:
      - fyntrac-network
    restart: unless-stopped  # Added for resilience (matches your Pulsar setup)

  memcached:
    image: memcached:1.6.18-alpine  # Pinned version (Alpine for smaller size)
    container_name: memcached
    ports:
      - "11211:11211"
    # depends_on:  # Uncomment if you need Memcached to wait for MongoDB (e.g., app sequencing)
    #   mongodb:
    #     condition: service_healthy
    healthcheck:  # Added simple healthcheck for consistency
      test: ["CMD", "nc", "-z", "localhost", "11211"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    networks:
      - fyntrac-network
    restart: unless-stopped  # Added for resilience

networks:
  fyntrac-network:
    driver: bridge
    external: true  # Connects to the existing manually created network (from previous fix)

volumes:
  mongodb-data:  # Named volume for MongoDB persistence (local driver by default)